@model TournamentViewModel

@{
    ViewBag.Title = "Turnier";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";

    string tournamentName = Model.T?.TournamentName ?? $"Turnier ID '{ViewContext.RouteData?.Values["tournamentId"]?.ToString()}'";

    SettingsViewModel? setvm = Model as SettingsViewModel;
}

@section MainNavigationAdditions {
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            @tournamentName
        </a>
        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
            <li class="nav-item">
                <a cd-route="Tournament" cd-action="Index" class="nav-link text-dark">Übersicht</a>
            </li>
            @if (User.Identity.IsAuthenticated){ 
                <li class="nav-item">
                    <a cd-route="Settings" cd-action="Index" class="nav-link text-dark">Einstellungen</a>
                </li>
            }
            @await RenderSectionAsync("TournamentNavigationAdditions", required: false)
        </ul>
    </li>
    <br />
}

<span>
    <a asp-controller="Home" asp-action="Tournaments">Turniere</a>
    @if (Model.T is object)
    {
        <span> > </span>
        <a cd-route="Tournament" cd-action="Index" cd-route-tournamentId="@Model.T.TournamentId">"@Model.T.TournamentName"</a>

        if (setvm is object)
        {
            <span> > </span>
            <a cd-route="Settings" cd-action="Index">Settings</a>
        }

        @await RenderSectionAsync("TournamentHierarchyAdditions", required: false)
    }
</span>

@RenderBody()

@section Scripts {
    @await RenderSectionAsync("Scripts", required: false)
}