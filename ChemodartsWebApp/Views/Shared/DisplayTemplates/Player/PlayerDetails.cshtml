@model ChemodartsWebApp.Models.Player

@{
    ViewData["Title"] = "Details";
    int? tournamentId;
    try
    {
        tournamentId = Convert.ToInt32(ViewData["TournamentId"]);
    }
    catch (Exception e)
    {
        tournamentId = null;
    }
}

<h1>Details</h1>

<div>
    <h4>Player in Shared</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PlayerName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerDartname)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PlayerDartname)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerContactData)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PlayerContactData)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerInterpret)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PlayerInterpret)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerSong)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PlayerSong)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.PlayerId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

@if(tournamentId is null)
{
    @Html.DisplayFor(m => Model.Matches, "Match/MatchList")
}
else{
    @Html.DisplayFor(m => Model.Matches.Where(m => m.Group.Round.TournamentId == tournamentId), "Match/MatchList")
}