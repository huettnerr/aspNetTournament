@model Seed

@switch(ViewData["RenderType"])
{
    case "Header":
        @if (User.Identity.IsAuthenticated)
        {
            @*<th>
                @Html.DisplayNameFor(model => model.MappedTournamentPlayer.TSP_PlayerFixed)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.MappedTournamentPlayer.TSP_PlayerCheckedIn)
            </th>
            <th>
                Spieler Aktion
            </th>
        }
        else
        {
            <th>
                @Html.DisplayNameFor(model => model.MappedTournamentPlayer.TSP_PlayerCheckedIn)
            </th>
        }
        break;
    case "Content":
        @if (User.Identity.IsAuthenticated){ 
            @*<td>
                @Html.DisplayFor(model => model.MappedTournamentPlayer.TSP_PlayerFixed)
                </td>*@
            <td>
                @if (!Model.MappedTournamentPlayer.TSP_PlayerCheckedIn)
                {
                    <a cd-route="Seed" cd-action="CheckIn" cd-route-seedId="@Model.SeedId">@Html.Raw("&#10006;")</a>
                }else{
                    <a cd-route="Seed" cd-action="CheckIn" cd-route-seedId="@Model.SeedId"> @Html.Raw("&#10004;")</a>
                }
            </td>
            <td>
                @if (Model.MappedTournamentPlayer.Player is object)
                {
                    <a cd-route="Seed" cd-action="RemovePlayerFromSeed" cd-route-seedId="@Model.SeedId">Entfernen</a>
                }
            </td>
        }
        else
        {
            <td>
                @if (!Model.MappedTournamentPlayer.TSP_PlayerCheckedIn)
                {
                    <p>@Html.Raw("&#10006;")</p>
                }else{
                    <p>@Html.Raw("&#10004;")</p>
                }
            </td>
        }
        break;
    default:
        goto case "Content";
}