@model Match

@switch(ViewData["RenderType"])
{
    case "Header":
        <th>
            Aktion
        </th>
        break;
    case "Content":
        <td>
            @if(Model.Status.Equals(Match.MatchStatus.Created)) 
            {
                <a asp-action="MatchStart" asp-route-id="@Model.MatchId" asp-route-showAll="@Context.Request.Query["showAll"]"> Start </a>
            }
            else 
            {
                <a asp-route-editId="@Model.MatchId" asp-fragment="Match_@Model.MatchId" asp-route-showAll="@Context.Request.Query["showAll"]">Edit</a>
                @*<a asp-action="MatchEditScore" asp-route-matchId="@Model.MatchId" asp-route-showAll="@Context.Request.Query["showAll"]">Edit</a>*@

                @if (Model.Status.Equals(Match.MatchStatus.Active))
                {
                    @if (!(Model.Venue is object) && Model.Group.Round.MappedVenues.Select(mv => mv.Venue).Where(v => v.Match is null).ToList().Count > 0)
                    {
                        <span> | </span>
                        <a asp-action="MatchAssignBoard" asp-route-id="@Model.MatchId" asp-route-showAll="@Context.Request.Query["showAll"]">Assign Board (@Model.Group.Round.MappedVenues.Select(mv => mv.Venue).Where(v => v.Match is null).ToList().Count frei)</a>
@*                        <span>@Model.Group.Round.MappedVenues.Select(mv => mv.Venue).Where(v => v.Match is null).ToList().Count</span>*@
                    }
                }
@*                <span>@Model.WinnerSeed?.Player?.CombinedName</span>*@
            }
        </td>
        break;
    default:
        goto case "Content";
}