@model IEnumerable<Match>
@{
    var dummyMatch = Model.FirstOrDefault();

    bool showGroup = false; ;
    if(ViewData["ShowGroup"]?.Equals("true") ?? false) showGroup = true;

    bool showTournament = false; ;
    if (ViewData["ShowTournament"]?.Equals("true") ?? false) showTournament = true;
}

<table class="table">
    <thead>
        <tr>
            @if (showTournament) {
                @Html.DisplayFor(m => dummyMatch, "Match/Columns/MatchTournament", new { RenderType = "Header"})
            }

            @if (showGroup) {
                @Html.DisplayFor(m => dummyMatch, "Match/Columns/MatchGroup", new { RenderType = "Header"})
            }

            @Html.DisplayFor(m => dummyMatch, "Match/Columns/MatchPlayer", new { RenderType = "Header"})
            @Html.DisplayFor(m => dummyMatch, "Match/Columns/MatchScore", new { RenderType = "Header"})
            @Html.DisplayFor(m => dummyMatch, "Match/Columns/MatchVenue", new { RenderType = "Header"})
            @*@Html.DisplayFor(m => dummyMatch, "Match/Columns/MatchTime", new { RenderType = "Header"})*@

            <th>Infos</th>

            @if (User.Identity.IsAuthenticated) @Html.DisplayFor(m => dummyMatch, "Match/Columns/MatchAdmin", new { RenderType = "Header" })
        </tr>
    </thead>
    <tbody>
@foreach(Match item in Model) {
        <tr id="Match_@item.MatchId">
            @if (showTournament) @Html.DisplayFor(m => item, "Match/Columns/MatchTournament", new { RenderType = "Content"})
            @if (showGroup) @Html.DisplayFor(m => item, "Match/Columns/MatchGroup", new { RenderType = "Content"})
                    @if (User.Identity.IsAuthenticated && Context.Request.Query["editMatchId"].Equals(item.MatchId.ToString()))
            {
                    <form cd-route="Match" cd-action="Edit" cd-route-tournamentId="@item.Group.Round.TournamentId" cd-route-roundId="@item.Group.RoundId" cd-route-matchId="@item.MatchId">
                    @Html.DisplayFor(m => item, "Match/Columns/MatchPlayer", new { RenderType = "Content"})
                    @Html.DisplayFor(m => item, "Match/Columns/MatchScore", new { RenderType = "Content", Edit = "true" })
                    @await Html.PartialAsync("../Shared/DisplayTemplates/Match/Columns/MatchVenue", item, new ViewDataDictionary(ViewData) { { "RenderType", "Content" }, { "Edit",  "true"}})
                    <td>
                        <button type="submit">Speichern</button>
                    </td>
                </form>
            }
            else
            {
                @Html.DisplayFor(m => item, "Match/Columns/MatchPlayer", new { RenderType = "Content"})
                @Html.DisplayFor(m => item, "Match/Columns/MatchScore", new { RenderType = "Content"})
                @Html.DisplayFor(m => item, "Match/Columns/MatchVenue", new { RenderType = "Content"})
                    <td><a cd-route="Match" cd-action="Details" cd-route-tournamentId="@item.Group.Round.TournamentId" cd-route-roundId="@item.Group.RoundId" cd-route-matchId="@item.MatchId">Details</a> </td>
                @if (User.Identity.IsAuthenticated)
                    @Html.DisplayFor(m => item, "Match/Columns/MatchAdmin", new { RenderType = "Content" })
                @*@Html.DisplayFor(m => item, "Match/Columns/MatchTime", new { RenderType = "Content"})*@
            }
        </tr>
    }
    </tbody>
</table>