@model ChemodartsWebApp.Models.Match

@{
    ViewData["Title"] = "Match Details";
    List<Match>? matchesBetween = Model.Seed1?.Player?.Matches?.Where(m => m.IsMatchOfPlayers(Model.Seed1.Player, Model.Seed2.Player))?.ToList();

    Seed statsSeed = new Seed();
    statsSeed.Statistics = new SeedStatistics(ScoreType.LegsOnly);
    matchesBetween?.ForEach(m => m.UpdateSeedStat((m.Seed1.Player.Equals(Model.Seed1.Player) ? m.Seed1 : m.Seed2), statsSeed.Statistics));
}

<h1>Match Info (@Model.Group.Round.Tournament.TournamentName - @Model.Group.Round.RoundName)</h1>

<h2>Ergebnis</h2>
@await Html.PartialAsync("../Shared/DisplayTemplates/Match/MatchList", new List<Match>() {Model}, new ViewDataDictionary(ViewData) { { "ShowGroup", "false" }})

<h2>Direkter Vergleich</h2>
<div>
    <table class="table">
        <tr>
            <th><b>@Model?.Seed1?.Player.CombinedName</b></th>
            <th>vs.</th>
            <th><b>@Model?.Seed2?.Player.CombinedName</b></th>
        </tr>
        @if (Model.Group.Round.Modus != RoundModus.RoundRobin) {
            <tr>
                <td>
                    <a cd-route="Group" cd-action="Index" cd-route-groupId="@Model.Seed1.Group.GroupId">
                    @Html.DisplayFor(model => model.Seed1.Group.GroupName)
                </a></td>
                @Html.DisplayFor(m => m, "Match/Columns/MatchGroup", new { RenderType = "Header"})
                <td>
                    <a cd-route="Group" cd-action="Index" cd-route-groupId="@Model.Seed1.Group.GroupId">
                    @Html.DisplayFor(model => model.Seed2.Group.GroupName)
                </a></td>
            </tr>
        }
         <tr>
            <td><b>@statsSeed.Statistics.MatchesWon</b> von @statsSeed.Statistics.Matches</td>
            <td>Siege</td>
            <td><b>@(statsSeed.Statistics.Matches - statsSeed.Statistics.MatchesWon)</b> von @statsSeed.Statistics.Matches</td>
        </tr>
         <tr>
            <td><b>@statsSeed.Statistics.PointsFor</b> von @(statsSeed.Statistics.PointsFor + statsSeed.Statistics.PointsAgainst)</td>
            <td>Legs</td>
            <td><b>@statsSeed.Statistics.PointsAgainst</b> von @(statsSeed.Statistics.PointsFor + statsSeed.Statistics.PointsAgainst)</td>
        </tr>
         <tr>
            <td><b>@statsSeed.Statistics.PointsDiff</b></td>
            <td>Leg Differenz</td>
            <td><b>@(-statsSeed.Statistics.PointsDiff)</b></td>
        </tr>
    </table>
</div>

<h2>Historie</h2>
@await Html.PartialAsync("../Shared/DisplayTemplates/Match/MatchList", matchesBetween.OrderBy(m => m.MatchId), new ViewDataDictionary(ViewData) { { "ShowTournament", "true" }, { "ShowGroup", "true" }})